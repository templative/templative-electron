on:
  push: null

permissions:
  contents: write

jobs:
  templative:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
        node:
          - 18
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install pipenv
        run: pip install pipenv pyinstaller

      - name: Install Requirements
        run: |
          cd python
          pipenv install
          pipenv requirements > req.txt
          pip install -r req.txt
          cd ..

      - name: Create Templative App/Exe
        run: pyinstaller --distpath ./ -y -n templative --onefile
          ./python/templative/__main__.py --hidden-import
          engineio.async_drivers.aiohttp --hidden-import engineio.async_aiohttp
          --collect-all templative

      - name: Upload Artifact Windows
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@master
        with:
          name: templative-server-windows
          path: ./templative.exe

      - name: Upload Artifact OSX
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@master
        with:
          name: templative-server-osx
          path: ./templative

  react:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
        node:
          - 18
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Install Node Packages
        run: npm install

      - name: Build React Files
        run: npm run react-build

      - name: Zip React Server Windows
        if: runner.os == 'Windows'
        run: Compress-Archive -Path build/* -Destination react.zip

      - name: Zip React Server OSX
        if: runner.os == 'macOS'
        run: zip react.zip build/

      - name: Upload Artifact Windows
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@master
        with:
          name: react-server-windows
          path: ./react.zip

      - name: Upload Artifact OSX
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@master
        with:
          name: react-server-osx
          path: ./react.zip
          
  electron:
    needs: [react, templative]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
        node:
          - 18
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Download Templative Server Windows
        if: runner.os == 'Windows'
        uses: actions/download-artifact@master
        with:
          name: templative-server-windows
          path: ./python

      - name: Download Templative Server OSX
        if: runner.os == 'macOS'
        uses: actions/download-artifact@master
        with:
          name: templative-server-osx
          path: ./python

      - name: Download React Server Windows 
        if: runner.os == 'Windows'
        uses: actions/download-artifact@master
        with:
          name: react-server-windows
          path: ./
      
      - name: Download React Server OSX
        if: runner.os == 'macOS'
        uses: actions/download-artifact@master
        with:
          name: react-server-osx
          path: ./

      - name: Unzip React Windows
        if: runner.os == 'Windows'
        run: Expand-Archive -LiteralPath "D:\a\templative-electron\templative-electron\react.zip" -DestinationPath "./build"
    
      - name: Unzip React OSX
        if: runner.os == 'macOS'
        run: unzip "./react.zip" -d "./build"
          
      - name: Install Node Packages
        run: npm install

      - name: Create Electron Application
        run: npm run make

      - name: Zip Output Windows
        if: runner.os == 'Windows'
        run: Compress-Archive -Path out/* -Destination templative.zip

      - name: Zip Output MacOS
        if: runner.os == 'macOS'
        run: zip templative.zip out/ 

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: templative-app
          path: ./templative.zip

      - name: Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: Release ${{runner.os}} ${{ github.run_number }}
          tag_name: ${{ github.run_number }}

      - name: Upload Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ./templative.zip
          asset_name: templative.zip
          asset_content_type: application/zip
