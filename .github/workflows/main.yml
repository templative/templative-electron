on:
  push: null

permissions:
  contents: write

jobs:
  templative:
    if: true
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
          # - macos-13-xlarge
        node:
          - 18
        python:
          - 3.11
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install pipenv
        run: pip install pipenv pyinstaller

      - name: Install Requirements
        run: |
          cd python
          pipenv install
          pipenv requirements > req.txt
          pip install -r req.txt
          cd ..

      - name: Create Templative App/Exe
        run: pyinstaller --distpath ./python -y -n templative --onefile
          ./python/templative/__main__.py --hidden-import
          engineio.async_drivers.aiohttp --hidden-import engineio.async_aiohttp
          --collect-all templative

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Install Node Packages
        run: npm install

      - name: Build React Files
        run: npm run react-build

      - name: Create Electron Application
        run: npm run make

      - name: Upload Artifact Windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@master
        with:
          name: templative-app-${{matrix.os}}
          path: ./out/Templative-win32-x64

      - name: Upload Artifact OSX x64
        if: matrix.os == 'macos-latest' || matrix.os == 'macos-13-xlarge'
        uses: actions/upload-artifact@master
        with:
          name: templative-app-${{matrix.os}}
          path: ./out/Templative-darwin-x64

      - name: Upload Artifact OSX Arm64
        if: matrix.os == 'macos-13-xlarge'
        uses: actions/upload-artifact@master
        with:
          name: templative-app-${{matrix.os}}
          path: ./out/Templative-darwin-arm64

  release:
    if: true
    permissions:
      contents: write
    needs: [templative]
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 18
    steps:
      - uses: actions/checkout@v2

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: Release ${{steps.package-version.outputs.current-version}}
          tag_name: ${{steps.package-version.outputs.current-version}}

  artifacts:
    if: true
    needs: [release]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 18
    steps:   
      - uses: actions/checkout@v2

      - name: Download Templative App Windows
        id: templative-download-windows
        uses: actions/download-artifact@master
        with:
          name: templative-app-windows-latest
          path: ./win32/

      - name: Download Templative App OSX
        id: templative-download-osx
        uses: actions/download-artifact@master
        with:
          name: templative-app-macos-latest
          path: ./macos/

      - name: List Directories
        run: |
          ls

      - name: List OSX Directories
        run: |
          cd ./macos
          ls
          cd ..

      - name: List Windows Directories
        run: |
          cd ./win32
          ls
          cd ..

      - name: List OSX Directories Rec
        run: |
          cd ./macos
          ls -R
          cd ..
  
      - name: List Windows Directories Rec
        run: |
          cd ./win32
          ls -R
          cd ..
          
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Zip Templative
        run:
          zip -r ${{steps.package-version.outputs.current-version}}_win32.zip ${{steps.templative-download-windows.outputs.download-path}}/*
          zip -r ${{steps.package-version.outputs.current-version}}_darwin.zip ${{steps.templative-download-osx.outputs.download-path}}/*      

      - name: Upload Artifact Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{needs.release.outputs.upload_url}}
          asset_path: ./${{steps.package-version.outputs.current-version}}_win32.zip
          asset_name: templative_windows_${{steps.package-version.outputs.current-version}}.zip
          asset_content_type: application/zip

      - name: Upload Artifact OSX
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{needs.release.outputs.upload_url}}
          asset_path: ./${{steps.package-version.outputs.current-version}}_darwin.zip
          asset_name: templative_darwin_${{steps.package-version.outputs.current-version}}.zip
          asset_content_type: application/zip

      - name: Deploy to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp ./${{steps.package-version.outputs.current-version}}_win32.zip s3://templative-artifacts
          aws s3 cp ./${{steps.package-version.outputs.current-version}}_darwin.zip s3://templative-artifacts
      
      - name: Create Osx Artifact Records
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://templative.net/updates?semanticVersionNumber=${{steps.package-version.outputs.current-version}}&processPlatform=darwin'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'

      - name: Create Windows Artifact Records
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://templative.net/updates?semanticVersionNumber=${{steps.package-version.outputs.current-version}}&processPlatform=win32'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'